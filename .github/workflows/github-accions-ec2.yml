name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - test
      - '!test2'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t sebastianperez02/appdec2 .

      - name: Push Docker image to DockerHub
        run: docker push sebastianperez02/appdec2:latest

  deploy-to-ec2:
    needs: build-and-push
    runs-on: ubuntu-latest
    strategy:
      matrix:
        instance: ${{ fromJson(github.ref_name == 'main' && '["HOST_DNS1", "HOST_DNS2"]' || '["HOST_DNS3", "HOST_DNS4"]') }}
    
    steps:
      - name: Trigger redeploy on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets[matrix.instance] }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Instalar Docker si no est치 instalado
            if ! command -v docker &> /dev/null; then
              echo "Docker no est치 instalado. Procediendo con la instalaci칩n..."
              sudo apt-get update
              sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
              echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
              sudo apt-get update
              sudo apt-get install -y docker-ce docker-ce-cli containerd.io
              sudo usermod -aG docker $USER
            else
              echo "Docker ya est치 instalado."
            fi

            # Comandos para desplegar el contenedor
            docker pull sebastianperez02/appdec2:latest 
            docker stop my_container || true 
            docker rm my_container || true 
            docker run -d --name containertest -p 80:80 sebastianperez02/appdec2:latest
            
            echo "Desplegando en ${{ matrix.instance }} con la rama ${{ github.ref_name }}"
