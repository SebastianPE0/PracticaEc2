name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - test
      - '!test2'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t sebastianperez02/appdec2 .

      - name: Push Docker image to DockerHub
        run: docker push sebastianperez02/appdec2:latest

  deploy-to-ec2:
    needs: build-and-push
    runs-on: ubuntu-latest
    strategy:
      matrix:
        instance: ${{ fromJson(github.ref_name == 'main' && '["HOST_DNS1", "HOST_DNS2"]' || '["HOST_DNS3", "HOST_DNS4"]') }}
    
    steps:
      - name: Trigger redeploy on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets[matrix.instance] }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Actualizar paquetes y preparar el entorno para Docker
            sudo apt update -y
            sudo apt install -y docker.io

            # Iniciar y habilitar Docker para que se ejecute al iniciar el sistema
            sudo systemctl start docker
            sudo systemctl enable docker

            # Agregar el usuario al grupo docker (esto evita tener que usar sudo para ejecutar docker)
            sudo usermod -aG docker $USER

            # Configurar permisos para el socket Docker
            sudo chmod 666 /var/run/docker.sock
            docker pull sebastianperez02/appdec2:latest 
            docker stop containertest || true 
            docker rm containertest || true 
            docker run -d --name containertest -p 80:80 sebastianperez02/appdec2:latest
            # Opci√≥n 1: Usar la red del host
            # docker run -d --name my_container --network host sebastianperez02/appdec2:latest
            
            echo "Desplegando en ${{ matrix.instance }} con la rama ${{ github.ref_name }}"
